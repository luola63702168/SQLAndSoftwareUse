-- 读未提交的：
	- 在一个事物中，另一个还没提交事物，就已经读取了，属于脏读。
-- 读已经提交的（其它数据库的默认级别）：
	- 在一个事物中，另一个提交后的事物可以读取了，所以之前提交的数据和现在读取的数据可能不一样，
	- 这样的话就会存在不可重复读和幻读情况。
-- 可重复读（默认级别）
	- 在一个事物中，事物是允许同时读取数据的，当一个事物要修改数据的话，只要没有别的事物在修改（别的事物可读）数据，就是可以的。
	- 所以，在该事物中可以重复的读取上次读取的数据，没有不可重复读的情况，
	- 但是对于之前读取的行数如果修改了，还是会读取修改行的，这便是还存在幻读情况。
--  可串行化
	- 会强制事物排序，每个事物互不干扰，一个事物如果不结束的话（读写均结束），另外一个事物不允许对该条数据或者该表数据进行写的操作，
	- 所以也就不存在两个事物同时更新一条或者插入一条的情况了。但是容易造成锁的竞争，进而超时。

-- 补充：
	- 幻读针对的是更新的行数不一样了，不可重复读针对的是单行的数据值不一样了
	- 对于幻读和不可重复读来说，这俩并不是坏的，要根据需求来考虑。

	- 对于可串行化而言，每个事物都可以获取一行数据的读锁，但是如果其中有个事物要更新这条数据
	- 就要等待另一个读锁的释放，如果另外一个事物也要更新数据的话，那么就会出现死锁现象
	- 所以，要避免这个问题就在查询的同时直接更新数据（select和update同时使用）。
	- 死锁问题可参考：https://www.jianshu.com/p/c3164b9c399f

	- 数据库的级别并不是越高越好，要根据需求而定。
	- 比如在订单并发的时候，是需要不可重复读的。
	- 一般使用可重复读级别：因为这个级别并发性较好，而且其它问题可以通过悲观锁和乐观锁进行处理。

	- 总而言之，一切根据需求而定。